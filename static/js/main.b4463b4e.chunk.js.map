{"version":3,"sources":["views/New.js","components/DeleteButton.js","components/AppliedButton.js","components/InterviewButton.js","components/RejectedButton.js","components/OfferButton.js","views/Index.js","views/View.js","components/StorageBar.js","App.js","serviceWorker.js","index.js"],"names":["New","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","setState","defineProperty","target","id","value","addItem","history","push","react_default","a","createElement","Form_default","style","width","margin","onSubmit","Group","Label","htmlFor","Control","onChange","type","placeholder","as","rows","ButtonGroup_default","Button_default","variant","size","Component","DeleteButton","onClick","handleClick","AppliedButton","applied","InterviewButton","interviewing","RejectedButton","rejected","OfferButton","offer","Index","Nav_default","className","saveChanges","loadItems","Alert_default","dismissible","items","length","Container_default","Row_default","Col_default","sm","ListGroup_default","map","item","i","date","Date","created","Item","key","href","url","title","company","toDateString","Link","to","concat","components_AppliedButton","changeAppliedStatus","components_InterviewButton","changeInterviewStatus","components_OfferButton","changeOfferStatus","components_RejectedButton","changeRejectionStatus","components_DeleteButton","deleteItem","View","job","find","match","params","Card_default","Body","Title","Subtitle","Text","notes","StorageBar","ProgressBar_default","now","label","App","unsavedChanges","lsSize","calculateStorage","data","toString","parseInt","filter","localStorage","setItem","JSON","stringify","string","getItem","parse","toFixed","_this2","Navbar_default","Brand","lib","components_StorageBar","Switch","Route","path","render","views_New","assign","views_View","views_Index","Boolean","window","location","hostname","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4463b4e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\nclass New extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(e) {\n    e.preventDefault()\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    this.props.addItem(this.state)\n    this.props.history.push('/')\n  }\n\n  render() {\n    return (\n      <Form\n        style={{ width: '50%', margin: '0 auto' }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Group>\n          <Form.Label htmlFor=\"title\">Title:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            id=\"title\"\n            type=\"text\"\n            placeholder=\"Enter title\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"url\">URL:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            id=\"url\"\n            type=\"text\"\n            placeholder=\"Enter url\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"company\">Company:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            id=\"company\"\n            type=\"text\"\n            placeholder=\"Enter company\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor=\"notes\">Notes:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            id=\"notes\"\n            type=\"text\"\n            as=\"textarea\"\n            rows=\"3\"\n            placeholder=\"free text\"\n          />\n        </Form.Group>\n        <ButtonGroup>\n          <Button variant=\"primary\" size=\"sm\" type=\"submit\">\n            Create\n          </Button>\n          <Button variant=\"warning\" size=\"sm\" type=\"reset\">\n            Clear\n          </Button>\n        </ButtonGroup>\n      </Form>\n    )\n  }\n}\n\nexport default New\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst DeleteButton = props => {\n  return (\n    <Button variant=\"danger\" id={props.id} onClick={props.handleClick}>\n      Del\n    </Button>\n  )\n}\n\nexport default DeleteButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst AppliedButton = props => {\n  return (\n    <Button\n      variant={props.applied ? 'primary' : 'outline-primary'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.applied ? 'Applied' : 'Apply?'}\n    </Button>\n  )\n}\n\nexport default AppliedButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst InterviewButton = props => {\n  return (\n    <Button\n      variant={props.interviewing ? 'info' : 'outline-info'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.interviewing ? 'Interviewing' : 'Interview?'}\n    </Button>\n  )\n}\n\nexport default InterviewButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst RejectedButton = props => {\n  return (\n    <Button\n      variant={props.rejected ? 'dark' : 'outline-dark'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.rejected ? 'Rejected' : 'Rejection?'}\n    </Button>\n  )\n}\n\nexport default RejectedButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst OfferButton = props => {\n  return (\n    <Button\n      variant={props.offer ? 'success' : 'outline-success'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.offer ? 'Offer' : 'Offer?'}\n    </Button>\n  )\n}\n\nexport default OfferButton\n","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport Nav from 'react-bootstrap/Nav'\nimport Alert from 'react-bootstrap/Alert'\nimport DeleteButton from '../components/DeleteButton'\nimport AppliedButton from '../components/AppliedButton'\nimport InterviewButton from '../components/InterviewButton'\nimport RejectedButton from '../components/RejectedButton'\nimport OfferButton from '../components/OfferButton'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Link } from 'react-router-dom'\n\nconst Index = props => {\n  return (\n    <div>\n      <Nav className=\"justify-content-center\">\n        <ButtonGroup size=\"sm\">\n          <Button variant=\"success\" onClick={props.saveChanges}>\n            Save Changes\n          </Button>\n          <Button variant=\"info\" onClick={props.loadItems}>\n            Load Jobs\n          </Button>\n        </ButtonGroup>\n      </Nav>\n      <Alert dismissible className=\"mt-3 small\" variant=\"warning\">\n        Remember to click 'Save Changes' before exiting.\n      </Alert>\n      {props.items.length === 0 ? (\n        <Alert className=\"mt-3 small\" variant=\"info\">\n          If you have used the application before click 'Load Jobs' to load\n          previously saved items.\n        </Alert>\n      ) : null}\n      <Container className=\"mt-3 small\">\n        <Row>\n          <Col sm={3}>Title (Company)</Col>\n          <Col sm={3}>Added</Col>\n          <Col sm={3}>Notes</Col>\n          <Col sm={3}>Actions</Col>\n        </Row>\n      </Container>\n\n      <ListGroup className=\"mt-3\">\n        {props.items.map((item, i) => {\n          let date = new Date(item.created)\n          return (\n            <ListGroup.Item key={i}>\n              <Container>\n                <Row>\n                  <Col sm>\n                    <a className=\"text-center\" href={item.url}>\n                      {item.title} ({item.company})\n                    </a>\n                  </Col>\n                  <Col sm>{date.toDateString()}</Col>\n                  <Col sm>\n                    <Button variant=\"link\">\n                      <Link to={`/view/${item.id}`}>Notes</Link>\n                    </Button>\n                  </Col>\n                  <Col sm>\n                    <ButtonGroup size=\"sm\">\n                      <AppliedButton\n                        id={i}\n                        handleClick={props.changeAppliedStatus}\n                        applied={item.applied}\n                      />\n                      <InterviewButton\n                        id={i}\n                        handleClick={props.changeInterviewStatus}\n                        interviewing={item.interviewing}\n                      />\n                      <OfferButton\n                        id={i}\n                        handleClick={props.changeOfferStatus}\n                        offer={item.offer}\n                      />\n                      <RejectedButton\n                        id={i}\n                        handleClick={props.changeRejectionStatus}\n                        rejected={item.rejected}\n                      />\n                      <DeleteButton id={i} handleClick={props.deleteItem} />\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </Container>\n            </ListGroup.Item>\n          )\n        })}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nconst View = props => {\n  let job = props.items.find(item => {\n    return item.id === props.match.params.id\n  })\n  if (!job) return <div>No job found. Please try again.</div>\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title className=\"text-info\">{job.title}</Card.Title>\n        <Card.Subtitle className=\"text-secondary\">{job.company}</Card.Subtitle>\n        <Card.Text className=\"text-dark\">\n          Notes: <br />\n          {job.notes}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default View\n","import React from 'react'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nconst StorageBar = props => {\n  let size = (props.size / 5) * 100\n  return (\n    <ProgressBar\n      now={size}\n      label={`Using ${props.size < 0.01 ? '< 0.01' : props.size} of 5 MB`}\n    />\n  )\n}\n\nexport default StorageBar\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport New from './views/New'\nimport Index from './views/Index'\nimport View from './views/View'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { IndexLinkContainer } from 'react-router-bootstrap'\nimport StorageBar from './components/StorageBar'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [],\n      unsavedChanges: false,\n      lsSize: 0\n    }\n\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.saveChanges = this.saveChanges.bind(this)\n    this.loadItems = this.loadItems.bind(this)\n    this.changeAppliedStatus = this.changeAppliedStatus.bind(this)\n    this.changeInterviewStatus = this.changeInterviewStatus.bind(this)\n    this.changeRejectionStatus = this.changeRejectionStatus.bind(this)\n    this.changeOfferStatus = this.changeOfferStatus.bind(this)\n    this.calculateStorage = this.calculateStorage.bind(this)\n  }\n\n  addItem(data) {\n    let items = this.state.items\n    data.created = Date.now()\n    data.id = data.created.toString()\n    data.applied = false\n    data.interviewing = false\n    data.rejected = false\n    data.offer = false\n    if (!data.notes) data.notes = ''\n    items.push(data)\n    this.setState({\n      items: items\n    })\n    this.saveChanges()\n  }\n\n  // delete a single item by index (add an actual id?)\n  deleteItem(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items.filter((item, i) => i !== key)\n    this.setState({\n      items: items\n    })\n  }\n\n  // put state into local storage - replace if exists\n  saveChanges(e) {\n    if (e) e.preventDefault()\n    localStorage.setItem('jobs', JSON.stringify(this.state.items))\n  }\n\n  // pull data from local storage and insert into state\n  loadItems(e) {\n    if (e) e.preventDefault()\n    let string = localStorage.getItem('jobs')\n    if (!string) return null\n    this.setState({\n      items: JSON.parse(string)\n    })\n  }\n\n  // add method for change applied status\n  changeAppliedStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].applied = !items[key].applied\n    this.setState({\n      items: items\n    })\n  }\n\n  // add method for change interview status\n  changeInterviewStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].interviewing = !items[key].interviewing\n    this.setState({\n      items: items\n    })\n  }\n\n  // add method for change rejected status\n  changeRejectionStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].rejected = !items[key].rejected\n    this.setState({\n      items: items\n    })\n  }\n\n  // add method for change offer status\n  changeOfferStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].offer = !items[key].offer\n    this.setState({\n      items: items\n    })\n  }\n\n  calculateStorage() {\n    if (!localStorage.getItem('jobs')) return 0\n    let length = localStorage.getItem('jobs').length * 2\n    let size = (length / 1024 / 1000).toFixed(2)\n    this.setState({\n      lsSize: size\n    })\n  }\n\n  componentDidMount() {\n    this.loadItems()\n    this.calculateStorage()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar>\n          {/* brand href hack because of gh pages */}\n          <Navbar.Brand href=\"/application-tracker\">Tracker</Navbar.Brand>\n          <Nav>\n            <IndexLinkContainer to=\"/\">\n              <Nav.Link>All</Nav.Link>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/new\">\n              <Nav.Link>New +</Nav.Link>\n            </IndexLinkContainer>\n          </Nav>\n        </Navbar>\n        <StorageBar size={this.state.lsSize} />\n        <main className=\"mt-3\">\n          <Switch>\n            <Route\n              path=\"/new\"\n              render={props => <New addItem={this.addItem} {...props} />}\n            />\n            <Route\n              path=\"/view/:id\"\n              render={props => <View items={this.state.items} {...props} />}\n            />\n            <Route\n              path=\"/\"\n              render={props => (\n                <Index\n                  items={this.state.items}\n                  saveChanges={this.saveChanges}\n                  loadItems={this.loadItems}\n                  deleteItem={this.deleteItem}\n                  changeAppliedStatus={this.changeAppliedStatus}\n                  changeInterviewStatus={this.changeInterviewStatus}\n                  changeRejectionStatus={this.changeRejectionStatus}\n                  changeOfferStatus={this.changeOfferStatus}\n                  {...props}\n                />\n              )}\n            />\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}