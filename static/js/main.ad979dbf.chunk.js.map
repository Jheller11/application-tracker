{"version":3,"sources":["views/New.js","components/DeleteButton.js","components/AppliedButton.js","components/InterviewButton.js","components/RejectedButton.js","components/OfferButton.js","views/Index.js","views/View.js","components/StorageBar.js","App.js","serviceWorker.js","index.js"],"names":["New","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","setState","defineProperty","target","name","value","addItem","reset","title","url","company","react_default","a","createElement","Form_default","onSubmit","Group","Label","Control","onChange","type","placeholder","as","rows","Button_default","variant","Component","DeleteButton","id","onClick","handleClick","AppliedButton","applied","InterviewButton","interviewing","RejectedButton","rejected","OfferButton","offer","Index","console","log","Nav_default","className","ButtonGroup_default","size","saveChanges","loadItems","Alert_default","dismissible","items","length","Container_default","Row_default","Col_default","sm","ListGroup_default","map","item","i","date","Date","created","Item","key","href","toDateString","Link","to","concat","components_AppliedButton","changeAppliedStatus","components_InterviewButton","changeInterviewStatus","components_OfferButton","changeOfferStatus","components_RejectedButton","changeRejectionStatus","components_DeleteButton","deleteItem","View","match","params","job","find","Card_default","Body","Title","Subtitle","Text","notes","StorageBar","ProgressBar_default","now","label","App","unsavedChanges","lsSize","calculateStorage","data","toString","push","parseInt","filter","localStorage","setItem","JSON","stringify","string","getItem","parse","toFixed","_this2","Navbar_default","Brand","lib","components_StorageBar","Switch","Route","path","render","views_New","assign","views_View","views_Index","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad979dbf.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\n\nclass New extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(e) {\n    e.preventDefault()\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    this.props.addItem(this.state)\n    e.target.reset()\n    this.setState({\n      title: '',\n      url: '',\n      company: ''\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Label>Title:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Enter title\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>URL:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            name=\"url\"\n            type=\"text\"\n            placeholder=\"Enter url\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Company:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            name=\"company\"\n            type=\"text\"\n            placeholder=\"Enter company\"\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Notes:</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            name=\"notes\"\n            type=\"text\"\n            as=\"textarea\"\n            rows=\"3\"\n            placeholder=\"free text\"\n          />\n        </Form.Group>\n        <Button variant=\"outline-primary\" type=\"submit\">\n          Create\n        </Button>\n        <Button variant=\"outline-warning\" type=\"reset\">\n          Clear\n        </Button>\n      </Form>\n    )\n  }\n}\n\nexport default New\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst DeleteButton = props => {\n  return (\n    <Button variant=\"danger\" id={props.id} onClick={props.handleClick}>\n      Del\n    </Button>\n  )\n}\n\nexport default DeleteButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst AppliedButton = props => {\n  return (\n    <Button\n      variant={props.applied ? 'primary' : 'outline-primary'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.applied ? 'Applied' : 'Apply?'}\n    </Button>\n  )\n}\n\nexport default AppliedButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst InterviewButton = props => {\n  return (\n    <Button\n      variant={props.interviewing ? 'info' : 'outline-info'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.interviewing ? 'Interviewing' : 'Interview?'}\n    </Button>\n  )\n}\n\nexport default InterviewButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst RejectedButton = props => {\n  return (\n    <Button\n      variant={props.rejected ? 'dark' : 'outline-dark'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.rejected ? 'Rejected' : 'Rejection?'}\n    </Button>\n  )\n}\n\nexport default RejectedButton\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\n\nconst OfferButton = props => {\n  return (\n    <Button\n      variant={props.offer ? 'success' : 'outline-success'}\n      id={props.id}\n      onClick={props.handleClick}\n    >\n      {props.offer ? 'Offer' : 'Offer?'}\n    </Button>\n  )\n}\n\nexport default OfferButton\n","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport Nav from 'react-bootstrap/Nav'\nimport Alert from 'react-bootstrap/Alert'\nimport DeleteButton from '../components/DeleteButton'\nimport AppliedButton from '../components/AppliedButton'\nimport InterviewButton from '../components/InterviewButton'\nimport RejectedButton from '../components/RejectedButton'\nimport OfferButton from '../components/OfferButton'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Link } from 'react-router-dom'\n\nconst Index = props => {\n  console.log(props)\n  return (\n    <div>\n      <Nav className=\"justify-content-center\">\n        <ButtonGroup size=\"sm\">\n          <Button variant=\"success\" onClick={props.saveChanges}>\n            Save Changes\n          </Button>\n          <Button variant=\"info\" onClick={props.loadItems}>\n            Load Jobs\n          </Button>\n        </ButtonGroup>\n      </Nav>\n      <Alert dismissible className=\"mt-3 small\" variant=\"warning\">\n        Remember to click 'Save Changes' before exiting.\n      </Alert>\n      {props.items.length === 0 ? (\n        <Alert className=\"mt-3 small\" variant=\"info\">\n          If you have used the application before click 'Load Jobs' to load\n          previously saved items.\n        </Alert>\n      ) : null}\n      <Container className=\"mt-3 small\">\n        <Row>\n          <Col sm={3}>Title (Company)</Col>\n          <Col sm={3}>Added</Col>\n          <Col sm={3}>Notes</Col>\n          <Col sm={3}>Actions</Col>\n        </Row>\n      </Container>\n\n      <ListGroup className=\"mt-3\">\n        {props.items.map((item, i) => {\n          let date = new Date(item.created)\n          return (\n            <ListGroup.Item key={i}>\n              <Container>\n                <Row>\n                  <Col sm>\n                    <a className=\"text-center\" href={item.url}>\n                      {item.title} ({item.company})\n                    </a>\n                  </Col>\n                  <Col sm>{date.toDateString()}</Col>\n                  <Col sm>\n                    <Button variant=\"link\">\n                      <Link to={`/view/${item.id}`}>Notes</Link>\n                    </Button>\n                  </Col>\n                  <Col sm>\n                    <ButtonGroup size=\"sm\">\n                      <AppliedButton\n                        id={i}\n                        handleClick={props.changeAppliedStatus}\n                        applied={item.applied}\n                      />\n                      <InterviewButton\n                        id={i}\n                        handleClick={props.changeInterviewStatus}\n                        interviewing={item.interviewing}\n                      />\n                      <OfferButton\n                        id={i}\n                        handleClick={props.changeOfferStatus}\n                        offer={item.offer}\n                      />\n                      <RejectedButton\n                        id={i}\n                        handleClick={props.changeRejectionStatus}\n                        rejected={item.rejected}\n                      />\n                      <DeleteButton id={i} handleClick={props.deleteItem} />\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </Container>\n            </ListGroup.Item>\n          )\n        })}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nconst View = props => {\n  console.log(props.match.params.id)\n  let job = props.items.find(item => {\n    return item.id === props.match.params.id\n  })\n  if (!job) return <div>No job found. Please try again.</div>\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title className=\"text-info\">{job.title}</Card.Title>\n        <Card.Subtitle className=\"text-secondary\">{job.company}</Card.Subtitle>\n        <Card.Text className=\"text-dark\">\n          Notes: <br />\n          {job.notes}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default View\n","import React from 'react'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nconst StorageBar = props => {\n  let size = (props.size / 5) * 100\n  return (\n    <ProgressBar\n      now={size}\n      label={`Using ${props.size < 0.01 ? '< 0.01' : props.size} of 5 MB`}\n    />\n  )\n}\n\nexport default StorageBar\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport New from './views/New'\nimport Index from './views/Index'\nimport View from './views/View'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport { IndexLinkContainer } from 'react-router-bootstrap'\nimport StorageBar from './components/StorageBar'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      items: [],\n      unsavedChanges: false,\n      lsSize: 0\n    }\n\n    this.addItem = this.addItem.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.saveChanges = this.saveChanges.bind(this)\n    this.loadItems = this.loadItems.bind(this)\n    this.changeAppliedStatus = this.changeAppliedStatus.bind(this)\n    this.changeInterviewStatus = this.changeInterviewStatus.bind(this)\n    this.changeRejectionStatus = this.changeRejectionStatus.bind(this)\n    this.changeOfferStatus = this.changeOfferStatus.bind(this)\n    this.calculateStorage = this.calculateStorage.bind(this)\n  }\n\n  addItem(data) {\n    let items = this.state.items\n    data.created = Date.now()\n    data.id = data.created.toString()\n    data.applied = false\n    data.interviewing = false\n    data.rejected = false\n    data.offer = false\n    if (!data.notes) data.notes = ''\n    items.push(data)\n    this.setState({\n      items: items\n    })\n  }\n\n  // delete a single item by index (add an actual id?)\n  deleteItem(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items.filter((item, i) => i !== key)\n    this.setState({\n      items: items\n    })\n  }\n\n  // put state into local storage - replace if exists\n  saveChanges(e) {\n    e.preventDefault()\n    localStorage.setItem('jobs', JSON.stringify(this.state.items))\n  }\n\n  // pull data from local storage and insert into state\n  loadItems(e) {\n    if (e) e.preventDefault()\n    let string = localStorage.getItem('jobs')\n    if (!string) return null\n    this.setState({\n      items: JSON.parse(string)\n    })\n  }\n\n  // add method for change applied status\n  changeAppliedStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].applied = !items[key].applied\n    this.setState({\n      items: items\n    })\n  }\n\n  // add method for change interview status\n  changeInterviewStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].interviewing = !items[key].interviewing\n    this.setState({\n      items: items\n    })\n  }\n\n  // add method for change rejected status\n  changeRejectionStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].rejected = !items[key].rejected\n    this.setState({\n      items: items\n    })\n  }\n\n  // add method for change offer status\n  changeOfferStatus(e) {\n    let key = parseInt(e.target.id)\n    let items = this.state.items\n    items[key].offer = !items[key].offer\n    this.setState({\n      items: items\n    })\n  }\n\n  calculateStorage() {\n    if (!localStorage.getItem('jobs')) return 0\n    let length = localStorage.getItem('jobs').length * 2\n    let size = (length / 1024 / 1000).toFixed(2)\n    this.setState({\n      lsSize: size\n    })\n  }\n\n  componentDidMount() {\n    this.loadItems()\n    this.calculateStorage()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar>\n          <Navbar.Brand href=\"/\">Tracker</Navbar.Brand>\n          <Nav>\n            <IndexLinkContainer to=\"/\">\n              <Nav.Link>All</Nav.Link>\n            </IndexLinkContainer>\n            <IndexLinkContainer to=\"/new\">\n              <Nav.Link>New +</Nav.Link>\n            </IndexLinkContainer>\n          </Nav>\n        </Navbar>\n        <StorageBar size={this.state.lsSize} />\n        <main className=\"mt-3\">\n          <Switch>\n            <Route\n              path=\"/new\"\n              render={props => <New addItem={this.addItem} {...props} />}\n            />\n            <Route\n              path=\"/view/:id\"\n              render={props => <View items={this.state.items} {...props} />}\n            />\n            <Route\n              path=\"/\"\n              render={props => (\n                <Index\n                  items={this.state.items}\n                  saveChanges={this.saveChanges}\n                  loadItems={this.loadItems}\n                  deleteItem={this.deleteItem}\n                  changeAppliedStatus={this.changeAppliedStatus}\n                  changeInterviewStatus={this.changeInterviewStatus}\n                  changeRejectionStatus={this.changeRejectionStatus}\n                  changeOfferStatus={this.changeOfferStatus}\n                  {...props}\n                />\n              )}\n            />\n          </Switch>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}